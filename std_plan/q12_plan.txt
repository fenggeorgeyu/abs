####### After Rewrite #########
FS[15]
Schema: 
_col0
_col1
_col2
__col3

  **SEL[19]
  Schema: 
  _col0 <- _col0
  _col1 <- _col1
  _col2 <- _col2
  __col3 <- Test Function Srv Greater (__col3, 0.0, __col6)

    **SEL[18]
    Schema: 
    _col0 <- _col0
    _col1 <- _col1
    _col2 <- _col2
    __col3 <- __col3
    __col4 <- __col4
    __col5 <- __col5
    __col6 <- GenRowId()

      GBY[13]
      Schema: 
      _col0 <- KEY._col0 (key)
      _col1 <- srv_sum(VALUE._col0)
      _col2 <- srv_sum(VALUE._col1)
      __col3 <- srv_count(VALUE.__col2)
      __col4 <- lin_sum(VALUE.__col3)
      __col5 <- cond_merge(VALUE.__col4)

        RS[12]
        Schema: 
        KEY._col0
        VALUE._col0
        VALUE._col1
        VALUE.__col2
        VALUE.__col3
        VALUE.__col4
        Column Expr Map: 
        KEY._col0: [_col0]
        VALUE.__col2: [__col3]
        VALUE.__col4: [__col5]
        VALUE.__col3: [__col4]

          GBY[11]
          Schema: 
          _col0 <- __col0 (key)
          _col1 <- srv_sum(__col1)
          _col2 <- srv_sum(__col2)
          __col3 <- srv_count()
          __col4 <- lin_sum(__col3)
          __col5 <- cond_merge()

            **SEL[17]
            Schema: 
            __col0 <- _col26
            __col1 <- CASE WHEN (((_col5 = '1-URGENT') or (_col5 = '2-HIGH'))) THEN (1) ELSE (0) END
            __col2 <- CASE WHEN (((_col5 <> '1-URGENT') and (_col5 <> '2-HIGH'))) THEN (1) ELSE (0) END
            __col3 <- __col2

              SEL[10]
              Schema: 
              _col26 <- _col26
              _col5 <- _col5
              __col2 <- __col2

                **MAPJOIN[20]
                Schema: 
                _col5
                _col26
                __col2
                Column Expr Map: 
                _col26: l[l_shipmode]
                _col5: o[o_orderpriority]
                __col2: l[tid]

                  TS[0]
                  Schema: 
                  o_orderkey
                  o_custkey
                  o_orderstatus
                  o_totalprice
                  o_orderdate
                  o_orderpriority
                  o_clerk
                  o_shippriority
                  o_comment
                  BLOCK__OFFSET__INSIDE__FILE
                  INPUT__FILE__NAME
                  [TableScan] TabName: orders isSampleTable: false

                  FIL[16]
                  Schema: 
                  l_orderkey
                  l_shipdate
                  l_commitdate
                  l_receiptdate
                  l_shipmode
                  tid
                  [Filter] Predicate:
                  (((((l_commitdate < l_receiptdate) and (l_shipdate < l_commitdate)) and (l_receiptdate >= '1994-01-01')) and (l_receiptdate < '1995-01-01')) and ((l_shipmode = 'MAIL') or (l_shipmode = 'SHIP')))

                    TS[1]
                    Schema: 
                    tid
                    l_orderkey
                    l_partkey
                    l_suppkey
                    l_linenumber
                    l_quantity
                    l_extendedprice
                    l_discount
                    l_tax
                    l_returnflag
                    l_linestatus
                    l_shipdate
                    l_commitdate
                    l_receiptdate
                    l_shipinstruct
                    l_shipmode
                    l_comment
                    BLOCK__OFFSET__INSIDE__FILE
                    INPUT__FILE__NAME
                    [TableScan] TabName: lineitem isSampleTable: true

####### Tree #########
FS[15]
  **SEL[19]
    **SEL[18]
      GBY[13]
        RS[12]
          GBY[11]
            **SEL[17]
              SEL[10]
                **MAPJOIN[20]
                  TS[0] false
                  FIL[16]
                    TS[1] true
